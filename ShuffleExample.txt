# This script build and overlay using one of the bootstrap topologies and run 
# the basic shuffle protocol on top of it.

SIZE 10000

CYCLE 100
CYCLES 300
CACHESIZE	50
MINDELAY 100
MAXDELAY 600

random.seed 1234567890
network.size SIZE
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE

protocol.tr UniformRandomTransport
{
	mindelay (CYCLE*MINDELAY)/100
	maxdelay (CYCLE*MAXDELAY)/100
}

protocol.gossip example.gossip.BasicShuffle
{
	# the cache size should be set to 30 and to 50.
	cacheSize CACHESIZE
	shuffleLength 8

	step CYCLE
	transport tr
	period CYCLE
}

#init.wire WireStar
#{
#	protocol gossip
#}

# This initializes the topology as a ring. Use should also use WireStar to
# initialize it as a star.

init.wire WireRingLattice
{
	protocol gossip
k 1
}

init.sch CDScheduler
{
	protocol gossip
}

control.graphPL GraphStats
{
	protocol gossip
	step CYCLE
	undir true
	# nl will produce path length information
	nl 10
	# uncomment the next line to produce clustering information
	nc 1000
}
control.degree example.gossip.DegreePrint
{
	protocol gossip
	
	step CYCLE
	type Shuffle
	cacheSize CACHESIZE
}
control.avgClustering example.gossip.AvgClusterPrint
{
	protocol gossip
	step CYCLE
	undir true
	nc 1000
	type Shuffle
	cacheSize CACHESIZE
}

control.avgLength example.gossip.AvgLengthPrint
{
	protocol gossip
	step CYCLE
	undir true
	nl 10
	type Shuffle
	cacheSize CACHESIZE
}



