# This script builds a randomly connected graph and prints in-degree 
# distribution, path length and clustering coefficient information.
# Basically it produces the data used as baseline.

SIZE 10000

CYCLE 1000
CYCLES 300

random.seed 1234567890
network.size SIZE
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE

## Adeel commented following
#protocol.gossip IdleProtocol
#{
#}

init.wire WireKOut
{
	protocol gossip
	k 50
}

control.degree example.reports.InDegreeObserver
{
	protocol gossip

	step CYCLE
	starttime 299000
	endtime 300000
}

control.graphPL GraphStats
{
	protocol gossip
	step CYCLE
	undir true
	#nl 10
	nc 1000
}
control.avgClustering example.gossip.AverageClusteringPrinter
{
	protocol gossip
	step CYCLE
	undir true
	nc 1000
	type Random
	cacheSize 50
}

control.avgLength example.gossip.AverageLengthPrinter
{
	protocol gossip
	step CYCLE
	undir true
	nl 10
	type Random
	cacheSize 50
}

